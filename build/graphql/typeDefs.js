"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = void 0;
var apollo_server_1 = require("apollo-server");
exports.typeDefs = apollo_server_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type Query {\n    me: User\n    languagesList: [LanguageListItem!]!\n    languageList: [Language!]!\n    wordsList(languageShortName: String!): [Word!]!\n    savedWordsInText(languageShortName: String!, text: String!): [String!]\n  }\n  type Mutation {\n    signup(credentials: CredentialsInput!, name: String!): AuthPayload!\n    signin(credentials: CredentialsInput!): AuthPayload!\n    addLanguage(name: String!, languageShortName: String!): String!\n    removeLanguage(languageShortName: String!): String!\n    addWord(languageShortName: String!, word: String, meaning: String): String!\n    removeWord(languageShortName: String!, word: String): String!\n  }\n  type User {\n    id: ID!\n    email: String!\n    name: String!\n    languages: [Language!]\n  }\n\n  type LanguageListItem {\n    name: String!\n    shortName: String!\n    flagUrl: String!\n  }\n\n  type Language {\n    id: ID!\n    name: String!\n    shortName: String!\n    words: [Word!]!\n  }\n\n  type Word {\n    id: ID!\n    word: String!\n    meaning: String!\n  }\n\n  type AuthPayload {\n    userErrors: [UserError!]!\n    token: String\n  }\n\n  input CredentialsInput {\n    email: String!\n    password: String!\n  }\n\n  type UserError {\n    message: String!\n  }\n"], ["\n  type Query {\n    me: User\n    languagesList: [LanguageListItem!]!\n    languageList: [Language!]!\n    wordsList(languageShortName: String!): [Word!]!\n    savedWordsInText(languageShortName: String!, text: String!): [String!]\n  }\n  type Mutation {\n    signup(credentials: CredentialsInput!, name: String!): AuthPayload!\n    signin(credentials: CredentialsInput!): AuthPayload!\n    addLanguage(name: String!, languageShortName: String!): String!\n    removeLanguage(languageShortName: String!): String!\n    addWord(languageShortName: String!, word: String, meaning: String): String!\n    removeWord(languageShortName: String!, word: String): String!\n  }\n  type User {\n    id: ID!\n    email: String!\n    name: String!\n    languages: [Language!]\n  }\n\n  type LanguageListItem {\n    name: String!\n    shortName: String!\n    flagUrl: String!\n  }\n\n  type Language {\n    id: ID!\n    name: String!\n    shortName: String!\n    words: [Word!]!\n  }\n\n  type Word {\n    id: ID!\n    word: String!\n    meaning: String!\n  }\n\n  type AuthPayload {\n    userErrors: [UserError!]!\n    token: String\n  }\n\n  input CredentialsInput {\n    email: String!\n    password: String!\n  }\n\n  type UserError {\n    message: String!\n  }\n"])));
var templateObject_1;
